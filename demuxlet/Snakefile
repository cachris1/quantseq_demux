sc_samples = ["8-3", "8-4", "21-2", "21-4", 
                  "60-1", "60-4"]
alt_samples = ["H358", "H441"]
hypoxia_samples = ["A375", "SH4", "Panc1", "BxPC3", "HCT15", "SW620", "SJSA1", "143B", "MDA231", "HCC1806", "PC3", "LNCaP", "H441", "H358", "HepG2", "Hep3b", "786O", "Caki1", "U87", "LN229"]
vcf_samples = ["A375", "SH4", "Panc1", "BxPC3", "HCT15", "SW620", "SJSA1", "143B", "MDA231", "HCC1806", "PC3", "LNCaP", "H441", "H358", "HepG2", "Hep3b", "786O", "Caki1", "U87", "LN229"]


rule vcf:
    input:
        bam = working_dir + "dedup_bams/{sample}/Aligned.sortedByCoord.out.bam"
    output:
        working_dir + "vcfs/{sample}.vcf.gz"
    params:
        depth = 115,
        mq_adjust = 50,
        genome = "/home/genomes/cellranger_refs/refdata-gex-GRCh38-2020-A/fasta/genome.fa",
        depth_filter = 250,
        sample = "{sample}"
    log:
        working_dir + "logs/vcf/{sample}.log"
    conda:
        "bcftools"
    shell:
        """
        bcftools mpileup \
        -d {params.depth} \
        -C {params.mq_adjust} \
        -Ou -f {params.genome} {input.bam} 2> {log} | \
        bcftools call \
        -Ou -mv -f GP - 2> {log} | \
        bcftools filter \
        -e 'QUAL<20 || DP>{params.depth_filter} || MAF<0.2' \
        -Ou -o {output} - 2> {log} 
        """


rule index_vcf:
    input:
        vcf = working_dir + "vcfs/{sample}.vcf.gz"
    output:
        working_dir + "vcfs/{sample}.vcf.gz.csi",
    params:
        sorte = working_dir + "sorted_vcfs/{sample}.vcf",
        sorte_gz = working_dir + "sorted_vcfs/{sample}.vcf.gz",
    conda:
        "bcftools"
    shell:
        """
        bcftools index {input} 
        """


rule star_se_alt:
    input:
        fq1 = working_dir + "alt_fastqs/{alt_sample}.R1.fastq.gz", 
        # path to STAR reference genome index
        idx="/home/genomes/cellranger_refs/refdata-gex-GRCh38-2020-A/star",
    output:
        # see STAR manual for additional output files
        aln = working_dir + "star/{alt_sample}/Aligned.sortedByCoord.out.bam",
        log = working_dir + "star/{alt_sample}/Log.out",
        log_final = working_dir + "star/{alt_sample}/Log.final.out", 
    params:
        out_prefix = working_dir + "star/{alt_sample}/",
    log:
        working_dir + "logs/star/{alt_sample}.log",
    threads: 10
    conda:
        "quantseq"
    shell:
        """
        STAR \
        --runThreadN 10 \
        --genomeDir {input.idx} \
        --readFilesIn {input.fq1} \
        --readFilesCommand zcat \
        --outSAMtype BAM SortedByCoordinate \
        --outFilterType BySJout \
        --outFilterMultimapNmax 200 \
        --alignSJoverhangMin 8 \
        --alignSJDBoverhangMin 1 \
        --outFilterMismatchNmax 999 \
        --outFilterMismatchNoverLmax 0.6 \
        --alignIntronMin 20 \
        --alignIntronMax 1000000 \
        --alignMatesGapMax 1000000 \
        --limitOutSJcollapsed 5000000 \
        --outSAMattributes NH HI NM MD \
        --outFileNamePrefix {params.out_prefix} > {log}       
        """



rule merge_vcf:
    input:
        vcf = expand(working_dir + "vcfs/{sample}.vcf.gz", sample= vcf_samples),
        index = expand(working_dir + "vcfs/{sample}.vcf.gz.csi", sample = vcf_samples),
    output:
        working_dir + "merged_vcf.vcf.gz"
    threads:
        1
    conda:
        "bcftools"
    shell:
        """
        bcftools merge \
        -o {output} \
        -0 \
	    -Oz \
        --threads {threads} \
        {input.vcf} 
        """

rule cellranger:
    input:
        data = "/home/cachris/geneva/hypoxia/data/TSHG10_hypoxia_GENEVA",
    output:
        bams = working_dir + "cellranger_outputs2/{sc_samples}/possorted_genome_bam.bam"
    params:
        index = "/home/genomes/cellranger_refs/refdata-gex-GRCh38-2020-A/",
        ids = "{sc_samples}",
        outputdir = working_dir + "cellranger_outputs/{sc_samples}"
    threads:
        18
    log:
        working_dir + "logs/cellranger/{sc_samples}.log"
    # Call the cellranger command for each sample
    shell:
        """
        cellranger count \
        --id={params.ids} \
        --fastqs={input.data}\
        --transcriptome={params.index} \
        --sample={params.ids} \
        --localcores={threads} > {log} 2>&1 \
        && mv {params.ids}/outs/* {params.outputdir}/ \
        && rm -r {params.ids}/
        """


rule cellranger_combined:
    input:
        data = "/home/cachris/projects/geneva/hypoxia/data/TSHG10_hypoxia_GENEVA",
    output:
        bams = working_dir + "cellranger_human_mouse_combined/{sc_samples}_barn/possorted_genome_bam.bam"
    params:
        index = "/home/cachris/projects/geneva/refdata-gex-GRCh38-and-mm10-2020-A/",
        ids = "{sc_samples}_barn",
        outputdir = working_dir + "cellranger_human_mouse_combined/{sc_samples}_barn"
    threads:
        18
    log:
        working_dir + "logs/cellranger_barn/{sc_samples}.log"
    # Call the cellranger command for each sample
    shell:
        """
        cellranger count \
        --id={params.ids} \
        --fastqs={input.data}\
        --transcriptome={params.index} \
        --sample={wildcards.sc_samples} \
        --localcores={threads} > {log} 2>&1 \
        && mv {params.ids}/outs/* {params.outputdir}/ \
        && rm -r {params.ids}/
        """


rule demuxlet:
    input:
        sc_bams = working_dir + "cellranger_outputs/{sc_samples}/possorted_genome_bam.bam",
        vcf = working_dir + "merged_vcf.vcf.gz"
    output:
        working_dir + "demuxlet_out/{sc_samples}/{sc_samples}.best"
    params:
        outdir = working_dir + "demuxlet_out/{sc_samples}/",
        grouplist = working_dir + "analysis/mouse_cell_removal/{sc_samples}CellsBySpecies/humancells.txt",
        dirr = "{sc_samples}*",
        samp = "{sc_samples}"
    log:
        working_dir + "logs/demuxlet/{sc_samples}.log"
    conda:
        "demuxlet"
    shell:
        """
        demuxlet \
        --vcf {input.vcf} \
        --sam {input.sc_bams} \
        --out {params.samp} \
        --tag-UMI UB \
        --group-list {params.grouplist} \
        --field GT \
        --alpha 0.0 \
        --geno-error 0.1 \
        --alpha 0.5 \
        > {log} 2>&1 \
        && mv {params.dirr} {params.outdir}
        """



rule demuxlet_nh358:
    input:
        sc_bams = working_dir + "cellranger_outputs/{sc_samples}/possorted_genome_bam.bam",
        vcf = working_dir + "merged_vcf_noH358.vcf.gz"
    output:
        working_dir + "demuxlet_out_noH358/{sc_samples}/{sc_samples}.best"
    params:
        outdir = working_dir + "demuxlet_out_noH358/{sc_samples}/",
        grouplist = working_dir + "analysis/mouse_cell_removal/{sc_samples}CellsBySpecies/humancells.txt",
        dirr = "{sc_samples}*",
        samp = "{sc_samples}"
    log:
        working_dir + "logs/demuxlet/{sc_samples}.log"
    conda:
        "demuxlet"
    shell:
        """
        demuxlet \
        --vcf {input.vcf} \
        --sam {input.sc_bams} \
        --out {params.samp} \
        --tag-UMI UB \
        --group-list {params.grouplist} \
        --field GT \
        --alpha 0.0 \
        --geno-error 0.1 \
        --alpha 0.5 \
        > {log} 2>&1 \
        && mv {params.dirr} {params.outdir}
        """
