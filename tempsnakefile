""""
rule UMI_extract:
    input:
        r1 = working_dir + "demux_fastqs/{sample}.R1.fastq.gz"
        r2 = working_dir + "demux_fastqs/{sample}.R2.fastq.gz"
    output:
        r1 = working_dir + "extracted_fastqs/{sample}.R1.fastq.gz"
        r2 = working_dir + "extracted_fastqs/{sample}.R2.fastq.gz"
    log:
        "logs/UMI_extract.log"
    shell:
        """"
        umi_tools extract 
        --extract-method=string 
        --bc-pattern X 
        --bc-pattern2 NNNNNNNNNN 
        -L {log} 
        -S {output.r1} 
        -I {input.r1} 
        --read2-in= {input.r2} 
        --read2-out=/dev/null
        """"

rule cutadapt:
    input:
        r1 = working_dir + "extracted_fastqs/{sample}.1.fastq", 
    output:
        r1 = working_dir + "trimmed/{sample}.1.fastq",
        qc = working_dir + "trimmed/{sample}.qc.txt",
    shell:
        """"
        cutadapt -m 20 -O 20 -a "polyA=A{20}" -a "QUALITY=G{20}" -n 2 {input.r1} | 
        cutadapt  -m 20 -O 3 --nextseq-trim=10  -a "r1adapter=A{18}AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC;min_overlap=3;max_error_rate=0.100000" - 
        | cutadapt -m 20 -O 3 -a "r1polyA=A{18}" - | 
        cutadapt -m 20 -O 20 -g "r1adapter=AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC;min_overlap=20" --discard-trimmed -o {output.r1}
        """"

rule star_se:
    input:
        fq1="reads/{sample}_R1.1.fastq",
        # path to STAR reference genome index
        idx="index",
    output:
        # see STAR manual for additional output files
        aln = working_dir + "star/se/{sample}/se_aligned.bam",
        log = working_dir + "logs/se/{sample}/Log.out",
        log_final = working_dir + "logs/se/{sample}/Log.final.out",
        unmapped= working_dir + "star/se/{sample}/unmapped.fastq",
    log:
        "logs/star/{sample}.log",
    params:
        # optional parameters
        extra="--outSAMtype BAM SortedByCoordinate",
    threads: 10
    wrapper:
        "v2.3.2/bio/star/align"


rule dedup:
    input:
        bam = working_dir + "star/se/{sample}/se_aligned.bam",
    output:
        stats = working_dir + "dedup_bams/{sample}/{sample}_dedup.txt"
        bam = working_dir + "dedup_bams/{sample}/{sample}_dedup_sorted.bam"
    log:
        working_dir + "logs/deduplication_{sample}.log"
    shell:
        """"
        umi_tools dedup 
        -I {input.bam} 
        -S {output.bam}
        --multimapping-detection-method=NH 
        --output-stats= {output.stats}
        --log={log}
        """"

""""
